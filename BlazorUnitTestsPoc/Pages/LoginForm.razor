@page "/login"
<h3>Login Form</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <form role="form">
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" class="form-control" @bind-value="login.Email" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" class="form-control" @bind-value="login.Password" />
                </div>
                <button type="button" class="btn btn-primary" @onclick="Login">Submit</button>
            </form>
            <div class="alert alert-primary" hidden="@(errorMessage == string.Empty)">
                @errorMessage
            </div>
        </div>
    </div>
</div>

@code {


    [Inject]
    private ILoginProcessor LoginProcessor { get; set; }

    private Login login = new();

    private string errorMessage = string.Empty;

    private bool ValidateEmail()
    {
        return !string.IsNullOrEmpty(login.Email);
    }

    private bool ValidatePassword()
    {
        return !string.IsNullOrEmpty(login.Password);
    }

    private async Task Login()
    {
        if (ValidateEmail() && ValidatePassword())
        {
            if (!LoginProcessor.Login(login.Email, login.Password))
            {
                errorMessage = "invalid credentials";
            }
        }
        else
        {
            errorMessage = "invalid credentials";
        }
    }
}
